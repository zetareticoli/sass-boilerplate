/// Returns the value in rem for a given pixel value.
/// @param {Number} $value - The pixel value to be converted.
/// @return {Number} The converted value in rem.

@function rem($value) {
  @return $value / $base-font-size * 1rem;
}

/// Create a divider rule between grid items
/// @param {String} $value - Property values: auto, none, text, all

@mixin user-select($value: none) {
  -webkit-user-select: $value;
  -moz-user-select: $value; 
  -ms-user-select: $value; 
  user-select: $value; 
}

/// Create a divider rule between grid items
/// @param {String} $value - The appearance value -- see https://developer.mozilla.org/en-US/docs/Web/CSS/appearance#Values

@mixin appearance($value) {
  @include prefixer(appearance, $value, webkit moz ms o spec);
}

/// Add prefix in automatic way
///
$prefix-for-webkit:    true !default;
$prefix-for-mozilla:   true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera:     true !default;
$prefix-for-spec:      true !default;

@mixin prefixer($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      @if $prefix-for-webkit {
        -webkit-#{$property}: $value;
      }
    } @else if $prefix == moz {
      @if $prefix-for-mozilla {
        -moz-#{$property}: $value;
      }
    } @else if $prefix == ms {
      @if $prefix-for-microsoft {
        -ms-#{$property}: $value;
      }
    } @else if $prefix == o {
      @if $prefix-for-opera {
        -o-#{$property}: $value;
      }
    } @else if $prefix == spec {
      @if $prefix-for-spec {
        #{$property}: $value;
      }
    } @else  {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}